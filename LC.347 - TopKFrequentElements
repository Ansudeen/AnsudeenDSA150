#include <iostream>
#include <unordered_set>
#include <unordered_map>
#include <string>
#include <algorithm>
#include <vector>
#include <numeric>
#include<map>
using namespace std;


int main()
{
	vector<int> v = { 1,2,2,3,3,3 };
	int k = 2;

	unordered_map<int, int> m;

	/*
		Approach 1:
			1. sort based on the frequence O(nlogn)
			2. print first k elements.
	*/

	for (auto& it : v)
	{
		m[it]++;
	}

	map<int, vector<int>, greater<int>> res;

	for (auto& it : m) {
		res[it.second].push_back(it.first);
	}

	int count = 0;
	for (auto& it : res) {
		for (auto& xit : it.second) {
			cout << xit << " | ";
			count++;
			if (count == k) {
				break;
			}
		}
		if (count == k) {
			break;
		}
		cout << endl;
		
	}

	/*
		Dry run:
		m.first		m.second
			1				1
			2				2
			3				3

		res.first		res.second
			3				3
			2				2
			1				1

		count			   res	
		  0                3
		  1				  {3,2}
	*/

	
}
